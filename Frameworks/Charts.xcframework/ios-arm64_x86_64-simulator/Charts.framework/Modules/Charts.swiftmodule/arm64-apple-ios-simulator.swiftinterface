// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.6 (swiftlang-5.6.0.323.62 clang-1316.0.20.8)
// swift-module-flags: -target arm64-apple-ios12.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name Charts
@_exported import Charts
import CoreGraphics
import QuartzCore
import Swift
import UIKit
import _Concurrency
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class LineChart : UIKit.UIView, UIKit.UIGestureRecognizerDelegate {
  @objc @_Concurrency.MainActor(unsafe) public func setData(_ newData: Charts.ChartData?, axisMax: CoreGraphics.CGFloat)
  @objc @_Concurrency.MainActor(unsafe) public func setLegendLabel(_ index: Swift.Int, text: Swift.String)
  @objc @_Concurrency.MainActor(unsafe) public init(colors: Swift.UnsafePointer<Swift.Int>, count: Swift.Int, xFormatter: Charts.ValueFormatter, options: Swift.UInt8)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(frame: CoreGraphics.CGRect)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @objc deinit
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func tintColorDidChange()
  @objc @_Concurrency.MainActor(unsafe) public func setLineLimit(_ newVal: CoreGraphics.CGFloat)
  @objc override dynamic public func observeValue(forKeyPath keyPath: Swift.String?, of object: Any?, change: [Foundation.NSKeyValueChangeKey : Any]?, context: Swift.UnsafeMutableRawPointer?)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func draw(_ rect: CoreGraphics.CGRect)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func gestureRecognizerShouldBegin(_ gestureRecognizer: UIKit.UIGestureRecognizer) -> Swift.Bool
  @_Concurrency.MainActor(unsafe) @objc public func gestureRecognizer(_ gestureRecognizer: UIKit.UIGestureRecognizer, shouldRecognizeSimultaneouslyWith otherGestureRecognizer: UIKit.UIGestureRecognizer) -> Swift.Bool
}
@objc @_inheritsConvenienceInitializers public class ChartUtility : ObjectiveC.NSObject {
  @objc public class func setDarkMode(enabled: Swift.Bool)
  @objc override dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class ChartData : ObjectiveC.NSObject {
  @objc required override dynamic public init()
  @objc public init(dataSets: [Charts.DataSet], lineWidth: Swift.Int, options: Swift.UInt8)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class DataSet : ObjectiveC.NSObject {
  @objc required override dynamic public init()
  @objc public init(colorVal: Swift.Int, fillSet: Charts.DataSet?)
  @objc public func replaceEntries(_ ptr: Swift.UnsafePointer<CoreGraphics.CGPoint>, count: Swift.Int)
  @objc deinit
}
@objc public protocol ValueFormatter {
  @objc func stringForValue(_ value: CoreGraphics.CGFloat) -> Swift.String
}
